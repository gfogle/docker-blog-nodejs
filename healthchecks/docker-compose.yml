# The docker-compose DSL syntax format we're using
version: "2.1"

# The containers we want to start and the images to start
# them from
services:

  #
  # Base postgres 9.6 image that we can connect to. This
  # will get downloaded straight from Docker Hub when we
  # bring up our containers
  #
  postgres:
    image: postgres:9.6
    restart: always
    ports:
     - "5432:5432"
    volumes:
     - .:/data
    # this environment variable - as noted on Docker Hub - will
    # create a database with this name if it doesnt already exist
    # when we start out container
    environment:
     - POSTGRES_DB=docker-blog
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

  # our basic node server we'll name "basic"
  basic: 
    # the directory path - relative to this compose file - where
    # we'll be able to find the Dockerfile
    build: ./
    # the port mappings we do so that traffic that docker
    # will forward from localhost -> container
    ports:
      - "4000:4000"
      - "9229:9229"
    # tell docker compose to watch ./server.js - the path relative
    # to our compose file on our computer - and then make that reflect
    # the same file at /usr/src/app/server.js inside of the container
    volumes:
      - "./server.js:/usr/src/app/server.js"
    environment:
      # inside of a container postgres - since its a container name- is a special usage where Docker
      # will magically forward traffic to it
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_NAME=docker-blog
    # the depends_on keyword lets us specify which other services
    # our basic service will depend on. 
    depends_on:
      # here we are saying that basic depends on postgres
      postgres:
        # we provide a condition - either service_started or service_healthy
        # as the value. If we say service_started, then if docker was able to
        # build the image and just start a container instance then we'll move on.
        # 
        # Another option is service_healthy which requires that a healthcheck
        # property is configured above
        condition: service_healthy